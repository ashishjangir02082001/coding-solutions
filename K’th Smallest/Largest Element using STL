//Given an array and a number k where k is smaller than size of array, we need to find the kâ€™th smallest and the k'th largest elements in the given array (using STL).
//The C++ code goes here ... 
//By Ashish Jangir ...

#include <bits/stdc++.h> 
using namespace std;

int kthSmallest(int arr[], int n, int k)
{
    set<int> s;
    for(int i=0;i<n;i++)
    s.insert(arr[i]);
    
    auto it = s.begin();  //The auto part lets the compiler deduce the type based on the context (the return value in this case).
    for(int i=0;i<k-1;i++)
        it++;
    
    return *it;
    
}
int kthLargest(int arr[], int n, int k)
{
    set<int> s;
    for(int i=0;i<n;i++)
    s.insert(arr[i]);
    
    auto it = s.begin();
    for(int i=n-1;i>k;i--)
        it++;
    
    return *it;
    
}
int main()
{
    int arr[] = { 12, 3, 5, 7, 3, 19 }; 
    int n = sizeof(arr) / sizeof(arr[0]), k = 2; 
    cout << "K'th smallest element is "<< kthSmallest(arr, n, k);
    cout<<endl;
         
    cout << "K'th largest element is "<< kthLargest(arr, n, k);
    return 0;
}
